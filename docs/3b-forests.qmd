---
title:  "Forests"
author: <br><br><br><br><span style="font-family:perpetua; font-variant:small-caps; color:#606060;">Kerry Back</span><br><br><img src="RiceBusiness-transparent-logo-sm.png"  height=80>
execute:
  echo: false
  jupyter: python3
  cache: true
format: 
  revealjs:
    highlight-style: monokai
    code-fold: true
    code-copy: hover
    scrollable: true
    slide-number: true
    preview-links: true
    self-contained: true
    controls: true
    transition: fade
    theme: [solarized, 2023.scss]
    incremental: true
---


## Random Forests


- Create multiple random sets of training data
- Train a tree on each set and average the predictions
- To create a random set of training data,
  - Draw observations (rows) randomly from the original data with replacement
  - Draw as many observations as in the original data
- The random data is created and the trees are trained and averaged by scikit-learn's RandomForestRegressor or RandomForestClassifier

## Gradient Boosting

- Fit a tree to the training data
- Compute the errors from the tree, and fit a second tree to the errors
  - The predicted values are now the predictions from the first tree plus [a learning rate times]{style="color: tomato"} the predictions from the second tree
- Compute the errors and fit a third tree to the errors, etc.
- Learning rate < 1 avoids overshooting

d## Example: ROEQ and MOM12M in 2021-12

<br>Get data from the SQL database as before

```{python}
from sqlalchemy import create_engine
import pymssql
import pandas as pd

server = "mssql-82792-0.cloudclusters.net:16272"
username = "user"
password = "RiceOwls1912" # paste password between quote marks
database = "ghz"

string = "mssql+pymssql://" + username + ":" + password + "@" + server + "/" + database

conn = create_engine(string).connect()

data = pd.read_sql(
    """
    select ticker, date, ret, roeq, mom12m
    from data
    where date='2021-12'
    """, 
    conn
)
data = data.dropna()
```


## Fit a random forest
. . .

```{.p code-line-numbers="1|3-4|6-9|10"}
from sklearn.ensemble import RandomForestRegressor

X = data[["roeq", "mom12m"]]
y = data["ret"]

model = RandomForestRegressor(
  max_depth=2,
  random_state=0
)
model.fit(X, y)
```

```{python}
from sklearn.tree import DecisionTreeRegressor

X = data[["roeq", "mom12m"]]
y = data["ret"]

model = DecisionTreeRegressor(max_depth=2, random_state=0)
_ = model.fit(X, y)
```

## View the regression tree

. . .

```p
from sklearn.tree import plot_tree
_ = plot_tree(model)
```

. . .

```{python}
import matplotlib as mpl
from sklearn.tree import plot_tree
import matplotlib.pyplot as plt

mpl.rcParams["figure.figsize"] = (16,5)

_ = plot_tree(model)
```

